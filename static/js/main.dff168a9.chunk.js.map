{"version":3,"sources":["images/logo.svg","api.js","actions/index.js","actions/types.js","components/Authentication/SignOutBtn.js","components/Authentication/LoginForm.js","pages/Register.js","components/ProgressBar.js","components/Modal.js","AddProduct.js","ProductList.js","pages/Profile.js","pages/NotFound.js","components/Authentication/BtnLogin.js","components/Header.js","App.js","reducers/authReducer.js","reducers/businessReducer.js","reducers/experienceReducer.js","reducers/uploadReducer.js","reducers/errorReducer.js","reducers/cartReducer.js","reducers/products.js","reducers/index.js","reducers/loaderReducer.js","index.js"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","myFireStorage","storage","firebaseAuth","auth","fetchSelectedBusiness","id","getPartnerExp","currentUser","dispatch","a","docRef","collection","doc","get","then","snapshot","exists","partnerEmail","data","Email","fetchPartnersExp","catch","err","console","log","res","type","payload","userEmail","business","collectionGroup","where","partnersExp","docs","forEach","d","push","setImgLinktoNull","uploadFile","files","bucketName","file","storageRef","ref","name","uploadTask","put","on","progress","parseInt","bytesTransferred","totalBytes","error","getDownloadURL","downloadURL","fetchAllProducts","orderBy","onSnapshot","availableProducts","item","sourceProductId","SignOutBtn","props","useDispatch","className","onClick","signOut","LoginForm","useForm","mode","register","handleSubmit","errors","onSubmit","onLoginSubmit","placeholder","required","pattern","signInErr","message","email","password","value","Register","navigate","useNavigate","state","useSelector","isSignedIn","loader","credentials","signInWithEmailAndPassword","u","user","userSignIn","signInError","renderRegister","ProgressBar","useState","HideProgressBar","setHideProgressBar","percentage","setTimeout","show","style","height","width","Modal","forwardRef","display","setdisplay","content","setcontent","modalClasses","setModalClasses","useImperativeHandle","open","close","ReactDOM","createPortal","backgroundColor","top","left","maxHeight","document","querySelector","AddProduct","edit","product","closeM","useEffect","defaultValues","watch","setValue","isValid","formState","isHidden","setisHidden","msg","pdtErrors","setpdtErrors","categories","__typename","frName","packageName","units","abrev","products","progressValue","uploads","uploadProgress","imgLink","allProducts","val","img_src","imgFile","createdAt","Timestamp","now","update","alert","getState","add","newProducts","addNewProduct","right","htmlFor","onChange","e","code","exist","find","String","barcode","filterByCode","target","src","alt","length","Array","from","Set","map","p","brand","filter","toLowerCase","includes","i","key","productPackage","JSON","stringify","dir","defaultValue","step","category","ProductList","search","setstate","editModal","useRef","openModal","current","closeModal","to","prod","keywords","parse","contentUnit","contentNumber","unit","productContenance","Profile","businesses","experiences","userExperiences","partnersExperiences","userUid","uid","renderProfile","NotFound","BtnLogin","onAuthStateChanged","Header","navlinks","background","logo","navOpen","setNavOpen","onMouseLeave","xmlns","viewBox","fillRule","clipRule","text","path","icon","App","window","location","pathname","hoverBackground","default","INITIAL_STATE","selectedBusiness","businessesList","searchedBusiness","selectedExperience","selectedCategory","publishedExperiences","selectedBizExpriences","uploadError","createError","fetchError","googleSignInErr","signUpError","paid","transaction_details","combineReducers","action","businessPartExperiences","cart","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","render"],"mappings":"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","file":"static/js/main.dff168a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/storage\";\r\nimport \"firebase/firestore\";\r\n\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyDHjChfDmIwjL11Qp_sO0YTfEoF9RI4rVE\",\r\n  authDomain: \"zamma-zamba.firebaseapp.com\",\r\n  databaseURL: \"https://zamma-zamba.firebaseio.com\",\r\n  projectId: \"zamma-zamba\",\r\n  storageBucket: \"zamma-zamba.appspot.com\",\r\n  messagingSenderId: \"386604851771\",\r\n  appId: \"1:386604851771:web:803e9804f62c33076eb21e\",\r\n  measurementId: \"G-DH3K29LN5Z\",\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nexport const firestore = firebase.firestore;\r\nexport const myFireStorage = firebase.storage;\r\nexport const firebaseAuth = firebase.auth;\r\n","import firebase from \"firebase\";\r\nimport { firestore, myFireStorage, firebaseAuth } from \"../api\";\r\n\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  SIGN_IN_ERROR,\r\n  GOOGLE_SIGNIN_ERROR,\r\n  COMPLETE_USER_DATA,\r\n  UPLOAD_PROGRESS,\r\n  UPLOAD_ERROR,\r\n  CREATE_ERROR,\r\n  GET_DOWNLOAD_URL,\r\n  EXPERIENCE_SELECTED,\r\n  CATEGORY_SELECTED,\r\n  FETCH_USER_EXPERIENCES,\r\n  FETCH_EXPERIENCE,\r\n  FETCH_SELECTED_BIZ_EXPERIENCES,\r\n  FETCH_PUBLISHED_EXPERIENCES,\r\n  FETCH_PARTNERS_EXPERIENCES,\r\n  FETCH_BUSINESSES,\r\n  SEARCH_BUSINESS_OWNER,\r\n  FETCH_SELECTED_BUSINESS,\r\n  EDIT_EXPERIENCE,\r\n  ADD_PRODUCT,\r\n  EDIT_PRODUCT,\r\n  FETCH_PRODUCTS,\r\n  CREATE_EXPERIENCE,\r\n  SIGN_UP_ERROR,\r\n  SET_LOADER,\r\n  EDIT_BUSINESS,\r\n  FETCH_CURRENT_USER,\r\n  FETCH_BUSINESS_PARTNERS_EXPERIENCES,\r\n  TRANSACTION_SUCCESS,\r\n  TRANSACTION_FAILED,\r\n} from \"./types\";\r\n\r\n// AUTHENTICATONS ACTIONS:\r\n\r\nexport const googleSignIn = () => async (dispatch) => {\r\n  const provider = new firebaseAuth.GoogleAuthProvider();\r\n  firebaseAuth()\r\n    .signInWithPopup(provider)\r\n    .then((result) => {\r\n      dispatch({\r\n        type: SIGN_IN,\r\n        payload: result.user,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: GOOGLE_SIGNIN_ERROR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\nexport const userSignIn =\r\n  ({ email, password }) =>\r\n  async (dispatch) => {\r\n    firebaseAuth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((u) => {\r\n        dispatch({\r\n          type: SIGN_IN,\r\n          payload: u.user,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: SIGN_IN_ERROR,\r\n          payload: err,\r\n        });\r\n      });\r\n  };\r\n\r\nexport const userSingUp =\r\n  ({ email, password }) =>\r\n  async (dispatch) => {\r\n    dispatch(setLoaderState(true));\r\n    firebaseAuth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((res) => {\r\n        dispatch({\r\n          type: SIGN_IN,\r\n          payload: res.user,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        dispatch({\r\n          type: SIGN_UP_ERROR,\r\n          payload: err,\r\n        });\r\n        dispatch(setLoaderState(false));\r\n      });\r\n  };\r\n\r\nexport const userSignOut = () => async (dispatch) => {\r\n  firebaseAuth()\r\n    .signOut()\r\n    .then((res) => {\r\n      dispatch({\r\n        type: SIGN_OUT,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const getAuthState = () => async (dispatch) => {\r\n  firebaseAuth().onAuthStateChanged((user) => {\r\n    if (user) {\r\n      return dispatch({ type: SIGN_IN, payload: user });\r\n    } else {\r\n      return dispatch({ type: SIGN_OUT });\r\n    }\r\n  });\r\n};\r\n\r\n/*------------------------------------------------------------- */\r\n/*------------------------------------------------------------- */\r\n/*------------------------------------------------------------- */\r\n\r\n//PAYMENTS ACTIONS:\r\n// create transaction details\r\nconst get_transaction_details = async (details, share = 0) => {\r\n  return {\r\n    id: details.id,\r\n    payerEmail: details.payer.email_address,\r\n    transactionTime: new Date(),\r\n    payerName: details.payer.name,\r\n    payerId: details.payer.payer_id,\r\n    purchase_details: {\r\n      amount: details.purchase_units[0].amount,\r\n      purchasedExperience: details.purchase_units[0].description,\r\n      earning: share,\r\n    },\r\n  };\r\n};\r\n\r\n// Get current Balance\r\nconst getUserBalance = async (id) => {\r\n  const balance = await firestore()\r\n    .collection(\"businesses\")\r\n    .doc(id)\r\n    .get()\r\n    .then((b) => b.data().Balance)\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n  return balance;\r\n};\r\n\r\n//Set Paid status\r\nconst setPaid = (check, details) => {\r\n  if (check) {\r\n    return {\r\n      type: TRANSACTION_SUCCESS,\r\n      payload: details,\r\n    };\r\n  } else {\r\n    return {\r\n      type: TRANSACTION_FAILED,\r\n      payload: details,\r\n    };\r\n  }\r\n};\r\n\r\nexport const completePurchase =\r\n  ({ OwnerId, Profit, Price, PartnerData }, details) =>\r\n  async (dispatch) => {\r\n    dispatch(setLoaderState(true));\r\n    let rate = Profit.split(\"/\");\r\n    rate = rate.map((n) => n.substring(n.length - 2));\r\n    const ownerShare = Price * (parseInt(rate[0]) / 100);\r\n    const partnerShare = Price * (parseInt(rate[1]) / 100);\r\n    const PartnerId = PartnerData.Uid;\r\n\r\n    // Get current balance\r\n    const ownerBalance = await getUserBalance(OwnerId);\r\n    const partnerBalance = await getUserBalance(PartnerId);\r\n\r\n    console.log(\r\n      `Owner Balance ${ownerBalance} and Partner balance ${partnerBalance}`\r\n    );\r\n    // Calculate the new Balance\r\n    const newOwnerBalance = ownerShare + ownerBalance;\r\n    const newPartnerBalance = partnerShare + partnerBalance;\r\n\r\n    // get transaction details\r\n    const owner_transaction_details = await get_transaction_details(\r\n      details,\r\n      ownerShare\r\n    );\r\n    const partner_transaction_details = await get_transaction_details(\r\n      details,\r\n      partnerShare\r\n    );\r\n    console.log(partner_transaction_details);\r\n    console.log(owner_transaction_details);\r\n\r\n    // update user Balance & add transaction details\r\n    dispatch(\r\n      updateBusiness(OwnerId, {\r\n        Balance: newOwnerBalance,\r\n        Transactions: firestore.FieldValue.arrayUnion(\r\n          owner_transaction_details\r\n        ),\r\n      })\r\n    );\r\n    dispatch(\r\n      updateBusiness(PartnerId, {\r\n        Balance: newPartnerBalance,\r\n        Transactions: firestore.FieldValue.arrayUnion(\r\n          partner_transaction_details\r\n        ),\r\n      })\r\n    );\r\n\r\n    //update paid state\r\n    if (details.status === \"COMPLETED\") {\r\n      dispatch(setPaid(true, get_transaction_details(details)));\r\n    } else {\r\n      dispatch(setPaid(false, details));\r\n    }\r\n    dispatch(setLoaderState(false));\r\n  };\r\n\r\n/*------------------------------------------------------------- */\r\n/*------------------------------------------------------------- */\r\n/*------------------------------------------------------------- */\r\n\r\n//BUSINESSES ACTIONS:\r\n\r\nexport const updateBusiness = (id, data) => async (dispatch) => {\r\n  firestore()\r\n    .collection(\"businesses\")\r\n    .doc(id)\r\n    .update(data)\r\n    .then((res) => {\r\n      console.log(res);\r\n      console.log(\"data updated\");\r\n      dispatch({\r\n        type: EDIT_BUSINESS,\r\n        payload: res,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const completeUserData = (user, data, imgLink) => async (dispatch) => {\r\n  const userData = {\r\n    Bname: data.Bname,\r\n    Picture: imgLink,\r\n    About: data.About,\r\n    Uid: user.uid,\r\n    Email: user.email,\r\n    Address: data.Address,\r\n    Web: data.Web,\r\n    Bnumber: data.Bnumber,\r\n    City: data.City,\r\n    Ohours: data.Ohours,\r\n    Category: data.Category,\r\n    Terms: data.Terms,\r\n    Balance: 0,\r\n  };\r\n  const docRef = firestore().collection(\"businesses\").doc(user.uid);\r\n  docRef\r\n    .set(userData)\r\n    .then(() => {\r\n      dispatch(setImgLinktoNull());\r\n      console.log(\"data saved\");\r\n      dispatch({\r\n        type: COMPLETE_USER_DATA,\r\n        payload: userData,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: CREATE_ERROR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\n\r\nexport const fetchSelectedBusiness =\r\n  (id, getPartnerExp = false, currentUser = false) =>\r\n  async (dispatch) => {\r\n    const docRef = firestore().collection(\"businesses\").doc(id);\r\n    const res = await docRef\r\n      .get()\r\n      .then((snapshot) => {\r\n        if (snapshot.exists) {\r\n          if (getPartnerExp) {\r\n            const partnerEmail = snapshot.data().Email;\r\n            dispatch(fetchPartnersExp(partnerEmail, true));\r\n          }\r\n          return snapshot.data();\r\n        } else {\r\n          return false;\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n    if (currentUser) {\r\n      dispatch({\r\n        type: FETCH_CURRENT_USER,\r\n        payload: res,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: FETCH_SELECTED_BUSINESS,\r\n        payload: res,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const fetchAllBusinesses = () => async (dispatch) => {\r\n  const docRef = await firestore().collection(\"businesses\").get();\r\n  let newBiz = [];\r\n  docRef.docs.forEach((d) => {\r\n    newBiz.push(d.data());\r\n  });\r\n  dispatch({\r\n    type: FETCH_BUSINESSES,\r\n    payload: newBiz,\r\n  });\r\n};\r\n\r\nexport const searchBusinessByNameorEmail = (businessId) => async (dispatch) => {\r\n  businessId = businessId.trim();\r\n  let resp;\r\n  if (RegExp(/^\\S+@\\S+$/i).test(businessId)) {\r\n    const emaildocRef = firestore()\r\n      .collection(\"businesses\")\r\n      .where(\"Email\", \"==\", businessId)\r\n      .get();\r\n    await emaildocRef.then((snapshot) => {\r\n      if (snapshot.docs.length > 0) {\r\n        resp = snapshot.docs[0].data();\r\n      } else {\r\n        resp = null;\r\n      }\r\n    });\r\n  } else {\r\n    const namedocRef = firestore()\r\n      .collection(\"businesses\")\r\n      .where(\"Bname\", \"==\", businessId)\r\n      .get();\r\n    await namedocRef.then((snapshot) => {\r\n      if (snapshot.docs.length > 0) {\r\n        console.log(\"Name exist\");\r\n        resp = snapshot.docs[0].data();\r\n      } else {\r\n        console.log(\"Name not found\");\r\n        resp = null;\r\n      }\r\n    });\r\n  }\r\n  dispatch({\r\n    type: SEARCH_BUSINESS_OWNER,\r\n    payload: resp,\r\n  });\r\n};\r\n\r\n/*------------------------------------------------------------- */\r\n/*------------------------------------------------------------- */\r\n/*------------------------------------------------------------- */\r\n\r\n//EXPERIENCES ACTIONS:\r\n\r\nexport const createExperience =\r\n  (userId, data, partnerData, imgLink, userBname) => async (dispatch) => {\r\n    const experience = {\r\n      ExpName: data.ExpName,\r\n      Conditions: data.Conditions,\r\n      OwnerOffer: data.OwnerOffer,\r\n      Category: data.Category,\r\n      Price: data.Price,\r\n      Deadline: data.Deadline,\r\n      Picture: imgLink,\r\n      Profit: data.Profit,\r\n      Desc: data.Desc,\r\n      Published: false,\r\n      RedeemOffer: data.RedeemOffer,\r\n      OwnerId: userId,\r\n      OwnerBname: userBname,\r\n      PartnerOffer: \"\",\r\n      RedeemPartnerOffer: null,\r\n      Partner: data.Partner,\r\n      PartnerData: partnerData,\r\n    };\r\n    const docRef = firestore()\r\n      .collection(\"businesses\")\r\n      .doc(userId)\r\n      .collection(\"exp\");\r\n    docRef\r\n      .add(experience)\r\n      .then(() => {\r\n        dispatch(setImgLinktoNull());\r\n        console.log(\"data saved\");\r\n        dispatch({\r\n          type: CREATE_EXPERIENCE,\r\n          payload: experience,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        dispatch({\r\n          type: CREATE_ERROR,\r\n          payload: err,\r\n        });\r\n      });\r\n  };\r\n\r\nexport const updateExperience = (data, ExpId, OwnerId) => async (dispatch) => {\r\n  const docRef = firestore()\r\n    .collection(\"businesses\")\r\n    .doc(OwnerId)\r\n    .collection(\"exp\")\r\n    .doc(ExpId);\r\n  const res = await docRef\r\n    .update(data)\r\n    .then(function () {\r\n      console.log(\"Document successfully updated!\");\r\n    })\r\n    .catch(function (error) {\r\n      // The document probably doesn't exist.\r\n      console.error(\"Error updating document: \", error);\r\n    });\r\n\r\n  dispatch(fetchSelectedExperience(ExpId));\r\n};\r\n\r\nexport const fetchExperiencesById = (userUid) => async (dispatch) => {\r\n  const docRef = await firestore()\r\n    .collection(\"businesses\")\r\n    .doc(userUid)\r\n    .collection(\"exp\")\r\n    .get();\r\n  let userExperiences = [];\r\n\r\n  docRef.docs.forEach((d) => {\r\n    userExperiences.push({ id: d.id, ...d.data() });\r\n  });\r\n\r\n  dispatch({\r\n    type: FETCH_USER_EXPERIENCES,\r\n    payload: userExperiences,\r\n  });\r\n};\r\n\r\nexport const fetchSelectedBusinessExperiences =\r\n  (userId) => async (dispatch) => {\r\n    let selectedBizExperiences = [];\r\n    const docRef = await firestore()\r\n      .collection(\"businesses\")\r\n      .doc(userId)\r\n      .collection(\"exp\")\r\n      .where(\"Published\", \"==\", true)\r\n      .get();\r\n    docRef.docs.forEach((d) => {\r\n      selectedBizExperiences.push(d.data());\r\n    });\r\n\r\n    dispatch({\r\n      type: FETCH_SELECTED_BIZ_EXPERIENCES,\r\n      payload: selectedBizExperiences,\r\n    });\r\n  };\r\n\r\nexport const fetchSelectedExperience = (id) => async (dispatch) => {\r\n  let selectedExperience;\r\n  const docRef = await firestore()\r\n    .collectionGroup(\"exp\")\r\n    .where(\"id\", \"==\", id)\r\n    .get();\r\n  docRef.docs.forEach((d) => {\r\n    selectedExperience = d.data();\r\n  });\r\n\r\n  dispatch({\r\n    type: FETCH_EXPERIENCE,\r\n    payload: selectedExperience,\r\n  });\r\n};\r\n\r\n// CHECK IF THIS IS IN USE\r\nexport const experienceSelected = (experience) => {\r\n  return {\r\n    type: EXPERIENCE_SELECTED,\r\n    payload: experience,\r\n  };\r\n};\r\n\r\nexport const fetchPartnersExp =\r\n  (userEmail, business = false) =>\r\n  async (dispatch) => {\r\n    const docRef = await firestore()\r\n      .collectionGroup(\"exp\")\r\n      .where(\"Partner\", \"==\", userEmail)\r\n      .get();\r\n    let partnersExp = [];\r\n    docRef.docs.forEach((d) => {\r\n      partnersExp.push({ id: d.id, ...d.data() });\r\n    });\r\n    if (business) {\r\n      dispatch({\r\n        type: FETCH_BUSINESS_PARTNERS_EXPERIENCES,\r\n        payload: partnersExp,\r\n      });\r\n    } else {\r\n      dispatch({\r\n        type: FETCH_PARTNERS_EXPERIENCES,\r\n        payload: partnersExp,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const fetchPublishedExp = () => async (dispatch) => {\r\n  const docRef = await firestore()\r\n    .collectionGroup(\"exp\")\r\n    .where(\"Published\", \"==\", true)\r\n    .get();\r\n  let publishedExp = [];\r\n  docRef.docs.forEach((d) => {\r\n    publishedExp.push({ id: d.id, ...d.data() });\r\n  });\r\n  dispatch({\r\n    type: FETCH_PUBLISHED_EXPERIENCES,\r\n    payload: publishedExp,\r\n  });\r\n};\r\n\r\n/*------------------------------------------------------------- */\r\n/*------------------------------------------------------------- */\r\n/*------------------------------------------------------------- */\r\n\r\n//OTHERS ACTIONS\r\n\r\nexport const setImgLinktoNull = () => {\r\n  return {\r\n    type: GET_DOWNLOAD_URL,\r\n    payload: null,\r\n  };\r\n};\r\n\r\nexport const categorySelected = (category) => {\r\n  return {\r\n    type: CATEGORY_SELECTED,\r\n    payload: category,\r\n  };\r\n};\r\n\r\nexport const setLoaderState = (state) => {\r\n  return {\r\n    type: SET_LOADER,\r\n    payload: state,\r\n  };\r\n};\r\n\r\nexport const uploadFile = (files, bucketName) => async (dispatch) => {\r\n  let file = files[0];\r\n  //RESIZE IMAGE\r\n  let storageRef = myFireStorage().ref(`${bucketName}/${file.name}`);\r\n  let uploadTask = storageRef.put(file);\r\n\r\n  uploadTask.on(\r\n    \"state_changed\",\r\n    (snapshot) => {\r\n      // Observe state change events such as progress, pause, and resume\r\n      // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n      let progress = parseInt(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      );\r\n      console.log(\"Upload is \" + progress + \"% done from action\");\r\n      dispatch({\r\n        type: UPLOAD_PROGRESS,\r\n        payload: progress,\r\n      });\r\n      // switch (snapshot.state) {\r\n      //   case myFireStorage.TaskState.PAUSED: // or 'paused'\r\n      //     console.log(\"Upload is paused\");\r\n      //     break;\r\n      //   case myFireStorage.TaskState.RUNNING: // or 'running'\r\n      //     console.log(\"Upload is running\");\r\n      //     break;\r\n      // }\r\n    },\r\n    function (error) {\r\n      // Handle unsuccessful uploads\r\n      dispatch({\r\n        type: UPLOAD_ERROR,\r\n        payload: error,\r\n      });\r\n    },\r\n    function () {\r\n      // Handle successful uploads on complete\r\n      // For instance, get the download URL: https://firebasestorage.googleapis.com/...\r\n      uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n        dispatch({\r\n          type: GET_DOWNLOAD_URL,\r\n          payload: downloadURL,\r\n        });\r\n        console.log(\"File available at\", downloadURL);\r\n      });\r\n    }\r\n  );\r\n};\r\n\r\n/////////////// PRODUCTS ACTIONS /////////////////////////////\r\nexport const addNewProduct = (data) => async (dispatch, getState) => {\r\n  const availableProducts = getState().products.availableProducts;\r\n  const docRef = firestore().collection(\"availableProducts\");\r\n  data.createdAt = firebase.firestore.Timestamp.now();\r\n  // .doc(userId)\r\n  // .collection(\"exp\");\r\n  docRef\r\n    .add(data)\r\n    .then(() => {\r\n      dispatch(setImgLinktoNull());\r\n      console.log(\"data saved\");\r\n      let newProducts = [...availableProducts];\r\n      newProducts.push(data);\r\n      dispatch({\r\n        type: ADD_PRODUCT,\r\n        payload: newProducts,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: CREATE_ERROR,\r\n        payload: err,\r\n      });\r\n    });\r\n};\r\nexport const editProduct = (data) => {\r\n  data.createdAt = firebase.firestore.Timestamp.now();\r\n  firestore()\r\n    .collection(\"availableProducts\")\r\n    .doc(data.sourceProductId)\r\n    .update(data);\r\n};\r\n\r\nexport const fetchAllProducts = () => async (dispatch) => {\r\n  firestore()\r\n    .collection(\"availableProducts\")\r\n    .orderBy(\"createdAt\")\r\n    .onSnapshot((snapshot) => {\r\n      let availableProducts = [];\r\n      snapshot.docs.forEach((d) => {\r\n        let item = d.data();\r\n        item.sourceProductId = d.id;\r\n        availableProducts.push(item);\r\n      });\r\n      dispatch({\r\n        type: FETCH_PRODUCTS,\r\n        payload: availableProducts,\r\n      });\r\n    });\r\n  // const docRef = await firestore()\r\n  //   .collection(\"availableProducts\")\r\n  //   .orderBy(\"createdAt\")\r\n  //   .get();\r\n  // let availableProducts = [];\r\n  // docRef.docs.forEach((d) => {\r\n  //   let item = d.data();\r\n  //   item.sourceProductId = d.id;\r\n  //   availableProducts.push(item);\r\n  // });\r\n};\r\n","//Login\r\nexport const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\n\r\n//Payment\r\nexport const TRANSACTION_SUCCESS = \"TRANSACTION_SUCCESS\";\r\nexport const TRANSACTION_FAILED = \"TRANSACTION_FAILED\";\r\n\r\n//Image upload\r\nexport const UPLOAD_PROGRESS = \"UPLOAD_PROGRESS\";\r\nexport const UPLOAD_ERROR = \"UPLOAD_ERROR\";\r\nexport const GET_DOWNLOAD_URL = \"GET_DOWNLOAD_URL\";\r\n//Category selection\r\nexport const CATEGORY_SELECTED = \"CATEGORY_SELECTED\";\r\n//Errors\r\nexport const CREATE_ERROR = \"CREATE_ERROR\";\r\nexport const FETCH_ERROR = \"FETCH_ERROR\";\r\nexport const SIGN_IN_ERROR = \"SIGN_IN_ERROR\";\r\nexport const SIGN_UP_ERROR = \"SIGN_UP_ERROR\";\r\nexport const GOOGLE_SIGNIN_ERROR = \"GOOGLE_SIGNIN_ERROR\";\r\n\r\nexport const SET_LOADER = \"SET_LOADER\";\r\n\r\nexport const COMPLETE_USER_DATA = \"COMPLETE_USER_DATA\";\r\nexport const FETCH_CURRENT_USER = \"FETCH_CURRENT_USER\";\r\n\r\nexport const CREATE_BUSINESS = \"CREATE_BUSINESS\";\r\nexport const FETCH_BUSINESSES = \"FETCH_BUSINESSES\";\r\nexport const FETCH_SELECTED_BUSINESS = \"FETCH_SELECTED_BUSINESS\";\r\nexport const FETCH_BUSINESS_PARTNERS_EXPERIENCES =\r\n  \"FETCH_BUSINESS_PARTNERS_EXPERIENCES\";\r\n\r\nexport const SEARCH_BUSINESS_OWNER = \"SEARCH_BUSINESS_OWNER\";\r\nexport const EDIT_BUSINESS = \"EDIT_BUSINESS\";\r\nexport const DELETE_BUSINESS = \"DELETE_BUSINESS\";\r\n\r\nexport const CREATE_EXPERIENCE = \"CREATE_EXPERIENCE\";\r\nexport const FETCH_USER_EXPERIENCES = \"FETCH_USER_EXPERIENCES\";\r\nexport const FETCH_PUBLISHED_EXPERIENCES = \"FETCH_PUBLISHED_EXPERIENCES\";\r\nexport const FETCH_EXPERIENCE = \"FETCH_EXPERIENCE\";\r\nexport const FETCH_SELECTED_BIZ_EXPERIENCES = \"FETCH_SELECTED_BIZ_EXPERIENCES\";\r\n\r\nexport const EDIT_EXPERIENCE = \"EDIT_EXPERIENCE\";\r\nexport const DELETE_EXPERIENCE = \"DELETE_EXPERIENCE\";\r\nexport const EXPERIENCE_SELECTED = \"EXPERIENCE_SELECTED\";\r\nexport const FETCH_PARTNERS_EXPERIENCES = \"FETCH_PARTNERS_EXPERIENCES\";\r\n\r\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\r\nexport const EDIT_PRODUCT = \"EDIT_PRODUCT\";\r\nexport const FETCH_PRODUCTS = \"FETCH_PRODUCTS\";\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userSignOut } from \"../../actions\";\r\n\r\nexport default function SignOutBtn(props) {\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <button\r\n      className={props.className}\r\n      onClick={async () => {\r\n        dispatch(userSignOut());\r\n      }}>\r\n      Sign out <i className=\"ion-ios-log-out ml-2\" />\r\n    </button>\r\n  );\r\n}\r\n\r\n// \"bg-red-700 px-4 py-2 rounded hover:bg-red-600 font-semibold text-white\"\r\n","import React from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nexport default function LoginForm(props) {\r\n  const { register, handleSubmit, errors } = useForm({\r\n    mode: \"onBlur\",\r\n  });\r\n  const onLoginSubmit = (data) => {\r\n    props.onLoginSubmit(data);\r\n  };\r\n  return (\r\n    <form className=\"mt-4 flex-col\" onSubmit={handleSubmit(onLoginSubmit)}>\r\n      <input\r\n        className=\"block mt-4 border-2 border-solid border-gray-200 p-2\"\r\n        type=\"text\"\r\n        placeholder=\"Email\"\r\n        name=\"email\"\r\n        ref={register({\r\n          required: true,\r\n          pattern: /^\\S+@\\S+$/i,\r\n        })}\r\n      />\r\n      <div className=\" text-xs text-red-500 italic\">\r\n        {props.signInErr ? `${props.signInErr.message}` : null}\r\n      </div>\r\n      <p className=\"text-red-600 text-xs italic\">\r\n        {errors.email ? \"Email is required\" : null}{\" \"}\r\n      </p>\r\n      <input\r\n        className=\"block mt-4 border-2 border-solid border-gray-200  p-2\"\r\n        type=\"password\"\r\n        placeholder=\"Password\"\r\n        name=\"password\"\r\n        ref={register({\r\n          required: true,\r\n        })}\r\n      />\r\n      <p className=\"text-red-600 text-xs italic\">\r\n        {errors.password ? \"Password is required\" : null}{\" \"}\r\n      </p>\r\n      <input\r\n        className=\"cursor-pointer bg-indigo-300 border border-solid border-indigo-500 mt-4 px-4 py-1 rounded-lg hover:bg-indigo-400\"\r\n        type=\"submit\"\r\n        value=\"Sign in\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"@reach/router\";\r\nimport GoogleAuth from \"../components/Authentication/GoogleAuth\";\r\nimport RegisterForm from \"../components/Authentication/RegisterForm\";\r\nimport LoginForm from \"../components/Authentication/LoginForm\";\r\nimport { userSignIn, userSingUp } from \"../actions\";\r\n\r\nexport default function Register() {\r\n  const navigate = useNavigate();\r\n  const state = useSelector((state) => {\r\n    return state;\r\n  });\r\n  const isSignedIn = state.auth.isSignedIn;\r\n  const err = state.errors;\r\n  const loader = state.loader;\r\n  const dispatch = useDispatch();\r\n\r\n  const onRegisterSubmit = (credentials) => {\r\n    dispatch(userSingUp(credentials));\r\n  };\r\n  const onLoginSubmit = (credentials) => {\r\n    dispatch(userSignIn(credentials));\r\n  };\r\n  const renderRegister = (isSignedIn) => {\r\n    switch (isSignedIn) {\r\n      case true:\r\n        navigate(\"/products\");\r\n        break;\r\n      case false:\r\n        if (loader) {\r\n          return (\r\n            <div className=\"bg-gray-500 inilne-block h-screen -mt-10 flex justify-center items-center text-white cursor-wait\">\r\n              <h1 className=\"font-bold\">Loading... Please wait...</h1>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div>\r\n              <div className=\"flex sm:justify-around items-center flex-col sm:items-start sm:flex-row\">\r\n                {/* <div className=\"sm:w-1/4\">\r\n                  <h2>Register a new account</h2>\r\n                  <RegisterForm\r\n                    signUpErr={err.signUpError}\r\n                    onRegisterSubmit={onRegisterSubmit}\r\n                  />\r\n                </div> */}\r\n                <div className=\"sm:w-1/4 sm:mt-0 mt-10\">\r\n                  <h2>Login to your account</h2>\r\n                  <LoginForm\r\n                    signInErr={err.signInError}\r\n                    onLoginSubmit={onLoginSubmit}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* <hr className=\"mt-10 mb-10\"></hr>\r\n              <div className=\"flex flex-col items-center mb-10\">\r\n                <GoogleAuth />\r\n                <div className=\" text-xs text-red-500 italic\">\r\n                  {err.googleSignInErr\r\n                    ? `${err.googleSignInErr.message}`\r\n                    : null}{\" \"}\r\n                </div>\r\n              </div> */}\r\n            </div>\r\n          );\r\n        }\r\n\r\n      default:\r\n        return (\r\n          <div className=\"bg-gray-500 inilne-block h-screen flex justify-center items-center text-white cursor-wait\">\r\n            <h1 className=\"font-bold\">Loading... Please wait...</h1>\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return <div>{renderRegister(isSignedIn)}</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function ProgressBar(props) {\r\n  const [HideProgressBar, setHideProgressBar] = useState(\"\");\r\n  if (props.percentage === 100) {\r\n    setTimeout(() => {\r\n      setHideProgressBar(\"hidden\");\r\n    }, 1500);\r\n  }\r\n  //   const [progressBarDisplay, setProgressBarDisplay] = useState(null);\r\n\r\n  //Hide progressBar after the the download is complete\r\n  //   const removeProgressBar = () => {\r\n  //     if (props.percentage === 100) {\r\n  //       setTimeout(() => {\r\n  //         setProgressBarDisplay(\"hidden\");\r\n  //       }, 1500);\r\n  //     }\r\n  //     if (progressBarDisplay) {\r\n  //       return progressBarDisplay;\r\n  //     } else {\r\n  //       return props.show;\r\n  //     }\r\n  //   };\r\n\r\n  return (\r\n    <div\r\n      className={`bg-gray-300 w-full text-center text-white font-semibold rounded ${props.show} ${HideProgressBar}`}>\r\n      <div\r\n        className=\"bg-green-400\"\r\n        style={{ height: \"24px\", width: `${props.percentage}%` }}>\r\n        {props.percentage === 100\r\n          ? \"File uploaded successfully\"\r\n          : `${props.percentage}%`}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, forwardRef, useImperativeHandle } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst Modal = forwardRef((props, ref) => {\r\n  const lang = \"fr\";\r\n  const [display, setdisplay] = useState(false);\r\n  const [content, setcontent] = useState(\"\");\r\n  const [modalClasses, setModalClasses] = useState(\"\");\r\n\r\n  useImperativeHandle(ref, () => {\r\n    return {\r\n      open: (content, modalClasses = \"w-11/12 overflow-y-scroll\") => {\r\n        setdisplay(true);\r\n        setcontent(content);\r\n        setModalClasses(modalClasses);\r\n      },\r\n      close: () => {\r\n        setdisplay(false);\r\n      },\r\n    };\r\n  });\r\n\r\n  return display\r\n    ? ReactDOM.createPortal(\r\n        <div\r\n          className=\"fixed top-0 bottom-0 right-0 left-0 z-20\"\r\n          style={{ backgroundColor: \"rgb(0,0,0,0.3)\" }}>\r\n          <div className=\"fixed top-0 bottom-0 right-0 left-0\">\r\n            <div\r\n              style={{ top: \"50%\", left: \"50%\", maxHeight: \"88%\" }}\r\n              className={`relative bg-white min-h-[25%] max-h-[75%]   transform -translate-x-1/2 -translate-y-1/2 ${modalClasses}`}>\r\n              {content}\r\n            </div>\r\n          </div>\r\n        </div>,\r\n        document.querySelector(\"#modal\")\r\n      )\r\n    : null;\r\n});\r\n\r\nexport default Modal;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport ProgressBar from \"./components/ProgressBar\";\r\nimport {\r\n  uploadFile,\r\n  setImgLinktoNull,\r\n  addNewProduct,\r\n  editProduct,\r\n  fetchAllProducts,\r\n} from \"./actions\";\r\nimport { navigate } from \"@reach/router\";\r\n\r\nexport default function AddProduct({ edit = false, product, closeM }) {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchAllProducts());\r\n  }, [dispatch]);\r\n  const getValues = () => {\r\n    if (edit) {\r\n      console.log(product);\r\n      return product;\r\n    } else {\r\n      return {};\r\n    }\r\n  };\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    errors,\r\n    watch,\r\n    setValue,\r\n    formState: { isValid },\r\n  } = useForm({\r\n    mode: \"onBlur\",\r\n    defaultValues: getValues(),\r\n  });\r\n  const [isHidden, setisHidden] = useState(true);\r\n  const [showX, setshowX] = useState(false);\r\n  const [pdtErrors, setpdtErrors] = useState({\r\n    msg: \"\",\r\n    product: \"\",\r\n  });\r\n  const [products, setproducts] = useState({\r\n    categories: [\r\n      {\r\n        __typename: \"ProductCategoryType\",\r\n        id: \"1\",\r\n        name: \"تغدية\",\r\n        frName: \"Alimentation\",\r\n      },\r\n      {\r\n        __typename: \"ProductCategoryType\",\r\n        id: \"2\",\r\n        name: \"تغدية الحيونات\",\r\n        frName: \"\",\r\n      },\r\n      {\r\n        __typename: \"ProductCategoryType\",\r\n        id: \"3\",\r\n        name: \"تجميل/نظافة شخصية\",\r\n        frName: \"\",\r\n      },\r\n      {\r\n        __typename: \"ProductCategoryType\",\r\n        id: \"4\",\r\n        name: \"لوازم المطبخ\",\r\n        frName: \"Ustensil de Cuisine\",\r\n      },\r\n      {\r\n        __typename: \"ProductCategoryType\",\r\n        id: \"5\",\r\n        name: \"خدمات\",\r\n        frName: \"Service\",\r\n      },\r\n      {\r\n        __typename: \"ProductCategoryType\",\r\n        id: \"6\",\r\n        name: \"مواد التنظيف\",\r\n        frName: \"Nettoyage\",\r\n      },\r\n      {\r\n        __typename: \"ProductCategoryType\",\r\n        id: \"7\",\r\n        name: \"صيانة و إصلاح\",\r\n        frName: \"Bricolage / réparation\",\r\n      },\r\n\r\n      {\r\n        __typename: \"ProductCategoryType\",\r\n        id: \"8\",\r\n        name: \"سقاطة\",\r\n        frName: \"BonBon et biscuits\",\r\n      },\r\n      {\r\n        __typename: \"ProductCategoryType\",\r\n        id: \"9\",\r\n        name: \"لوازم الحلويات\",\r\n        frName: \"Pâtisserie\",\r\n      },\r\n    ],\r\n    packageName: [\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 1,\r\n        name: \"كارط\",\r\n        frName: \"Carte\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 2,\r\n        name: \"خنشة\",\r\n        frName: \"Sac\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 3,\r\n        name: \"قرعة\",\r\n        frName: \"Bouteille\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 4,\r\n        name: \"باكية\",\r\n        frName: \"Packet\",\r\n      },\r\n      //   {\r\n      //     __typename: \"BigPackageNameType\",\r\n      //     id: 5,\r\n      //     name: \"باكية صغيرة\",\r\n      //     frName: \"Petit Packet\",\r\n      //   },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 6,\r\n        name: \"ساشي\",\r\n        frName: \"Sachet\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 7,\r\n        name: \"كرطونة\",\r\n        frName: \"Unité\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 8,\r\n        name: \"حك\",\r\n        frName: \"Boite\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 9,\r\n        name: \"علبة\",\r\n        frName: \"Boite\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 10,\r\n        name: \"بواطة\",\r\n        frName: \"Boite\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 11,\r\n        name: \"وحدة\",\r\n        frName: \"Unité\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 12,\r\n        name: \"بيدو\",\r\n        frName: \"Bidon\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 13,\r\n        name: \"كيلو\",\r\n        frName: \"Kilogramme\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 14,\r\n        name: \"متر\",\r\n        frName: \"Mètre\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 15,\r\n        name: \"غرام\",\r\n        frName: \"Gramme\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 16,\r\n        name: \"سنتيمتر\",\r\n        frName: \"Centimètre\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 17,\r\n        name: \"ليتر\",\r\n        frName: \"Litre\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 18,\r\n        name: \"سنتيليتر\",\r\n        frName: \"Centilitre\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 19,\r\n        name: \"درهم\",\r\n        frName: \"Dirhams\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 20,\r\n        name: \"كانيط \",\r\n        frName: \"Canette\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 21,\r\n        name: \"صندوق\",\r\n        frName: \"Caisse\",\r\n      },\r\n    ],\r\n    units: [\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 0,\r\n        name: \"وحدة\",\r\n        frName: \"Unité\",\r\n        abrev: \"x\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 1,\r\n        name: \"كيلو\",\r\n        frName: \"Kilogramme\",\r\n        abrev: \"Kg\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 2,\r\n        name: \"متر\",\r\n        frName: \"Mètre\",\r\n        abrev: \"m\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 3,\r\n        name: \"غرام\",\r\n        frName: \"Gramme\",\r\n        abrev: \"g\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 4,\r\n        name: \"سنتيمتر\",\r\n        frName: \"Centimètre\",\r\n        abrev: \"cm\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 5,\r\n        name: \"ليتر\",\r\n        frName: \"Litre\",\r\n        abrev: \"L\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 6,\r\n        name: \"ميليلتر\",\r\n        frName: \"Mililitre\",\r\n        abrev: \"ml\",\r\n      },\r\n      {\r\n        __typename: \"BigPackageNameType\",\r\n        id: 7,\r\n        name: \"سنتيليتر\",\r\n        frName: \"Centilitre\",\r\n        abrev: \"cl\",\r\n      },\r\n    ],\r\n  });\r\n  const state = useSelector((state) => {\r\n    return state;\r\n  });\r\n\r\n  const progressValue = state.uploads.uploadProgress;\r\n  let imgLink = state.uploads.downloadURL;\r\n  const allProducts = state.products.availableProducts;\r\n  const handleChange = (files) => {\r\n    setisHidden(false);\r\n    dispatch(uploadFile(files, \"products\"));\r\n  };\r\n\r\n  const onSubmit = (val) => {\r\n    // if files[0] exist and imgLink undefined alert Please reupload the image\r\n    if (edit) {\r\n      if (isValid) {\r\n        val.img_src = imgLink ? imgLink : product.img_src;\r\n        delete val.imgFile;\r\n        val.sourceProductId = product.sourceProductId;\r\n        editProduct(val);\r\n        closeM();\r\n      } else {\r\n        alert(\"veuillez remplisser le formulaire...\");\r\n      }\r\n    } else {\r\n      if (isValid) {\r\n        val.img_src = imgLink;\r\n        delete val.imgFile;\r\n        dispatch(addNewProduct(val));\r\n        navigate(\"/\");\r\n      } else {\r\n        alert(\"veuillez remplisser le formulaire...\");\r\n      }\r\n    }\r\n  };\r\n  const filterByCode = (code) => {\r\n    let exist = allProducts.find(\r\n      (product) => String(product.barcode) === String(code)\r\n    );\r\n    if (exist) {\r\n      setpdtErrors({\r\n        ...state,\r\n        msg: \"Ce produit existe déjà !!\",\r\n        product: exist.img_src,\r\n      });\r\n    } else {\r\n      setpdtErrors({\r\n        ...state,\r\n        msg: \"\",\r\n        product: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const getBrand = () => {\r\n    if (watch(\"brand\")) {\r\n      return String(watch(\"brand\").toLowerCase());\r\n    } else {\r\n      return \"\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-around p-10\">\r\n      <form className=\"w-full max-w-lg\" onSubmit={handleSubmit(onSubmit)}>\r\n        <button\r\n          style={{ top: \"5%\", right: \"5%\" }}\r\n          onClick={() => {\r\n            closeM();\r\n          }}\r\n          className={`${edit ? \"block\" : \"hidden\"}  absolute`}>\r\n          X\r\n        </button>\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"hasBarcodeId\">\r\n          Est ce que ce produit a un Code barre ?\r\n        </label>\r\n        <input\r\n          id=\"hasBarcodeId\"\r\n          className=\"w-10\"\r\n          type=\"checkbox\"\r\n          name=\"hasBarcode\"\r\n          ref={register}\r\n        />\r\n        <p className=\"text-gray-500 text-xs italic\">\r\n          Ne pas cochez si le produit n'a pas de code barre\r\n        </p>\r\n        <br />\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"barcodeId\">\r\n          Code barre\r\n        </label>\r\n        <input\r\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-gray-400\"\r\n          id=\"barcodeId\"\r\n          type=\"number\"\r\n          onChange={(e) => {\r\n            filterByCode(e.target.value);\r\n          }}\r\n          name=\"barcode\"\r\n          ref={register({ required: watch(\"hasBarcode\") })}\r\n        />\r\n        {pdtErrors.msg && (\r\n          <div className=\"flex justify-between items-center\">\r\n            <p className=\" text-sm italic text-red-600\"> {pdtErrors.msg} </p>\r\n            <img className=\"w-10\" src={pdtErrors.product} alt=\"\" />\r\n          </div>\r\n        )}\r\n\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"nameId\">\r\n          Nom du produit en Arabe\r\n        </label>\r\n        <input\r\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-gray-400\"\r\n          id=\"nameId\"\r\n          type=\"text\"\r\n          placeholder=\"إسم المنتج بالحروف العربية\"\r\n          name=\"name\"\r\n          ref={register({ required: true })}\r\n        />\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"productNameId\">\r\n          Nom du produit en Francais\r\n        </label>\r\n        <input\r\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-gray-400\"\r\n          id=\"productNameId\"\r\n          type=\"text\"\r\n          name=\"frName\"\r\n          ref={register({ required: true })}\r\n        />\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"keywordId\">\r\n          Mot clé pour rechervher ce produit\r\n        </label>\r\n\r\n        <textarea\r\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-gray-400 focus:border-gray-500\"\r\n          id=\"keywordId\"\r\n          placeholder=\" 6 mots clés: 3 arabe et 3 francais\"\r\n          name=\"keywords\"\r\n          ref={register({ required: true })}\r\n        />\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"BrandNameId\">\r\n          Nom de la marque\r\n        </label>\r\n        <input\r\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-gray-400\"\r\n          id=\"BrandNameId\"\r\n          type=\"text\"\r\n          name=\"brand\"\r\n          ref={register({ required: true })}\r\n        />\r\n        {String(watch(\"brand\")).length > 0 && (\r\n          <ul>\r\n            {Array.from(new Set(allProducts.map((p) => p.brand)))\r\n              .filter((brand) => brand.toLowerCase().includes(getBrand()))\r\n              .map((brand, i) => {\r\n                return (\r\n                  <li\r\n                    className=\"cursor-pointer\"\r\n                    key={`${brand} ${i}`}\r\n                    onClick={() => {\r\n                      setValue(\"brand\", brand);\r\n                    }}>\r\n                    {brand}\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        )}\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"contenanceId\">\r\n          Taille / poids\r\n        </label>\r\n\r\n        <div className=\"flex justify-around appearance-none w-full bg-gray-200 text-gray-700 border border-gray-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-gray-400\">\r\n          <select\r\n            //   className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n            name=\"unit\"\r\n            ref={register({ required: true })}>\r\n            {products.units.map((productPackage) => {\r\n              return (\r\n                <option\r\n                  key={productPackage.id}\r\n                  value={JSON.stringify(productPackage)}>\r\n                  {\" \"}\r\n                  {productPackage.name}{\" \"}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <input\r\n            dir=\"rtl\"\r\n            defaultValue={1}\r\n            id=\"contenanceId\"\r\n            type=\"number\"\r\n            step={\"0.01\"}\r\n            name=\"productContenance\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"size\">\r\n          Contenance du produit\r\n        </label>\r\n\r\n        <div className=\"flex justify-around appearance-none w-full bg-gray-200 text-gray-700 border border-gray-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-gray-400\">\r\n          <select\r\n            //   className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n            name=\"contentUnit\"\r\n            ref={register({ required: true })}>\r\n            {products.units.map((productPackage) => {\r\n              return (\r\n                <option\r\n                  key={productPackage.id}\r\n                  value={JSON.stringify(productPackage)}>\r\n                  {\" \"}\r\n                  {productPackage.name}{\" \"}\r\n                </option>\r\n              );\r\n            })}\r\n          </select>\r\n          <input\r\n            dir=\"rtl\"\r\n            defaultValue={1}\r\n            id=\"size\"\r\n            type=\"number\"\r\n            step={\"0.01\"}\r\n            name=\"contentNumber\"\r\n            ref={register({ required: true })}\r\n          />\r\n        </div>\r\n        <br />\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"image\">\r\n          Image du produit\r\n        </label>\r\n        <input\r\n          onChange={(e) => {\r\n            handleChange(e.target.files);\r\n          }}\r\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-500 rounded py-3 px-4 mb-3 leading-tight focus:outline-none focus:bg-gray-400\"\r\n          id=\"image\"\r\n          type=\"file\"\r\n          placeholder=\"Image du produit\"\r\n          name=\"imgFile\"\r\n          ref={register}\r\n        />\r\n        <ProgressBar\r\n          percentage={progressValue}\r\n          show={isHidden ? \"hidden\" : \"block\"}\r\n        />\r\n        <div\r\n          className={`${imgLink ? \"block\" : \"hidden\"} cursor-pointer w-10`}\r\n          //   onClick={() => {\r\n          //     //TO DO delete img from firebase storage\r\n          //     console.log(\"image deleted\");\r\n          //     dispatch(setImgLinktoNull());\r\n          //   }}\r\n          //   onMouseEnter={() => {\r\n          //     setshowX(true);\r\n          //   }}\r\n          //   onMouseLeave={() => {\r\n          //     setshowX(false);\r\n          //   }}\r\n        >\r\n          <img src={imgLink} alt=\"productImage\" />\r\n        </div>\r\n        <br />\r\n\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"categoryId\">\r\n          Categorie du produit\r\n        </label>\r\n\r\n        <select\r\n          className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n          id=\"categoryId\"\r\n          name=\"category\"\r\n          ref={register({ required: true })}>\r\n          {products.categories.map((category) => {\r\n            return (\r\n              <option key={category.id} value={JSON.stringify(category)}>\r\n                {\" \"}\r\n                {category.name}{\" \"}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <br />\r\n\r\n        <label\r\n          className={`block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2 ${\r\n            isValid ? \"\" : \"border-red-600\"\r\n          }`}\r\n          htmlFor=\"packageId\">\r\n          Unité de mesure ou de vente du produit\r\n        </label>\r\n\r\n        <select\r\n          className=\"block appearance-none w-full bg-white border border-gray-400 hover:border-gray-500 px-4 py-2 pr-8 rounded shadow leading-tight focus:outline-none focus:shadow-outline\"\r\n          id=\"packageId\"\r\n          name=\"packageName\"\r\n          ref={register({ required: true })}>\r\n          {products.packageName.map((productPackage) => {\r\n            return (\r\n              <option\r\n                key={productPackage.id}\r\n                value={JSON.stringify(productPackage)}>\r\n                {\" \"}\r\n                {productPackage.name}{\" \"}\r\n              </option>\r\n            );\r\n          })}\r\n        </select>\r\n        <br />\r\n\r\n        <input\r\n          className=\"bg-green-300 border border-solid cursor-pointer border-green-500 p-2 rounded-lg hover:text-white hover:bg-green-400\"\r\n          type=\"submit\"\r\n          value=\"Enregistrer\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchAllProducts } from \"./actions\";\r\nimport { Link } from \"@reach/router\";\r\nimport Modal from \"./components/Modal\";\r\nimport { useRef } from \"react\";\r\nimport AddProduct from \"./AddProduct\";\r\n\r\nexport default function ProductList() {\r\n  const dispatch = useDispatch();\r\n  const [state, setstate] = useState({\r\n    search: \"\",\r\n  });\r\n  useEffect(() => {\r\n    dispatch(fetchAllProducts());\r\n  }, [dispatch]);\r\n  const availableProducts = useSelector(\r\n    (state) => state.products.availableProducts\r\n  );\r\n  console.log(availableProducts);\r\n  const editModal = useRef();\r\n  const openModal = (content) => {\r\n    editModal.current.open(content);\r\n  };\r\n  const closeModal = () => {\r\n    editModal.current.close();\r\n  };\r\n  return (\r\n    <div className=\"p-10\">\r\n      <Modal ref={editModal} />\r\n      <div className=\"p-10 flex flex-col\">\r\n        <span className=\"text-center font-medium\">Filtrer </span>\r\n        <input\r\n          onChange={(e) => {\r\n            setstate({ ...state, search: e.target.value });\r\n          }}\r\n          type=\"text\"\r\n          className=\"w-full  p-2 border-2\"\r\n        />\r\n      </div>\r\n      <div className=\"flex justify-end my-3\">\r\n        <Link className=\"p-2 text-white bg-blue-400\" to=\"/ajouter\">\r\n          Ajouter un produit\r\n        </Link>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td className=\"border-2 p-1 font-medium border-gray-500\">N°</td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Image\r\n              </td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Code Barre\r\n              </td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Nom Arabe\r\n              </td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Nom Francais\r\n              </td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Marque\r\n              </td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Categorie\r\n              </td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Contenance\r\n              </td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Taille / poids\r\n              </td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Unite de mesure / emballage\r\n              </td>\r\n              <td className=\"border-2 p-2 font-medium border-gray-500\">\r\n                Actions\r\n              </td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {availableProducts\r\n              .filter(\r\n                (prod) =>\r\n                  prod.keywords\r\n                    ?.toLowerCase()\r\n                    .includes(state.search.toLowerCase()) ||\r\n                  String(prod.barcode)?.includes(state.search.toLowerCase())\r\n              )\r\n              .map((product, i) => {\r\n                return (\r\n                  <tr key={`${product.name}${product.img_src}`}>\r\n                    <td className=\"border-2 p-1 border-gray-500\">{i + 1}</td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      <img\r\n                        onClick={() => {\r\n                          openModal(\r\n                            <div>\r\n                              <button\r\n                                className=\"absolute\"\r\n                                style={{ top: \"5%\", right: \"5%\" }}\r\n                                onClick={closeModal}>\r\n                                X\r\n                              </button>\r\n                              <div className=\"flex justify-center items-center\">\r\n                                <img src={product.img_src} alt={product.name} />\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        }}\r\n                        className=\"w-12 cursor-pointer\"\r\n                        src={product.img_src}\r\n                        alt={product.name}\r\n                      />\r\n                    </td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      {product.barcode}\r\n                    </td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      {product.name}\r\n                    </td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      {product.frName}\r\n                    </td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      {product.brand}\r\n                    </td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      {JSON.parse(product.category)[\"name\"]}\r\n                    </td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      <div className=\"flex\">\r\n                        <span>{JSON.parse(product.contentUnit)[\"name\"]}</span>\r\n                        <span>{product.contentNumber}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      <div className=\"flex\">\r\n                        <span>{JSON.parse(product.unit)[\"name\"]}</span>\r\n                        <span>{product.productContenance}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      {JSON.parse(product.packageName)[\"name\"]}\r\n                    </td>\r\n                    <td className=\"border-2 p-2 border-gray-500\">\r\n                      <button\r\n                        onClick={() => {\r\n                          openModal(\r\n                            <AddProduct\r\n                              edit={true}\r\n                              product={product}\r\n                              closeM={closeModal}\r\n                            />\r\n                          );\r\n                        }}\r\n                        className=\"bg-green-400 text-white p-1 cursor-pointer hover:bg-green-600 rounded-lg \">\r\n                        Modifier\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport AccountForm from \"../components/Businesses/AccountForm\";\r\nimport Overview from \"../components/ProfileSections/OverView\";\r\nimport UserExperiencesSection from \"../components/ProfileSections/UserExperiencesSection\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"@reach/router\";\r\nimport {\r\n  fetchPartnersExp,\r\n  fetchExperiencesById,\r\n  fetchSelectedBusiness,\r\n  completeUserData,\r\n} from \"../actions\";\r\nimport PartnersExperiences from \"../components/ProfileSections/PartnersExperiences\";\r\nimport AccountDetails from \"../components/ProfileSections/AccountDetails\";\r\nimport ProductList from \"../ProductList\";\r\n\r\nexport default function Profile() {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector((state) => {\r\n    return state;\r\n  });\r\n  const loader = state.loader;\r\n  const currentUser = state.businesses.currentUser;\r\n  const [activeTab, setActiveTab] = useState(1);\r\n  const userExperiences = state.experiences.userExperiences;\r\n  const partnersExperiences = state.experiences.partnersExperiences;\r\n  const isSignedIn = state.auth.isSignedIn;\r\n  const user = state.auth.user;\r\n  useEffect(() => {\r\n    if (user) {\r\n      dispatch(fetchSelectedBusiness(user.uid, false, true));\r\n      dispatch(fetchExperiencesById(user.uid));\r\n      dispatch(fetchPartnersExp(user.email));\r\n    }\r\n  }, [user, dispatch]);\r\n  const onSubmit = (val, imgLink) => {\r\n    dispatch(completeUserData(user, val, imgLink));\r\n  };\r\n\r\n  // const renderTab = (activeTab) => {\r\n  //   if (partnersExperiences) {\r\n  //     switch (activeTab) {\r\n  //       case 1:\r\n  //         return (\r\n  //           <Overview\r\n  //             currentUser={currentUser}\r\n  //             partnerExp={partnersExperiences}\r\n  //             exp={userExperiences}\r\n  //           />\r\n  //         );\r\n  //       case 2:\r\n  //         return (\r\n  //           <UserExperiencesSection experiences={userExperiences} />\r\n  //         );\r\n  //       case 3:\r\n  //         return (\r\n  //           <PartnersExperiences\r\n  //             experiences={partnersExperiences}\r\n  //             currentUser={currentUser}\r\n  //           />\r\n  //         );\r\n  //       case 4:\r\n  //         return <AccountDetails currentUser={currentUser} />;\r\n\r\n  //       default:\r\n  //         return (\r\n  //           <Overview\r\n  //             account={currentUser}\r\n  //             partnerExp={partnersExperiences}\r\n  //           />\r\n  //         );\r\n  //     }\r\n  //   } else {\r\n  //     return (\r\n  //       <div className=\"bg-gray-500 inilne-block h-screen flex justify-center items-center text-white cursor-wait\">\r\n  //         <h1 className=\"font-bold\">Loading... Please wait...</h1>\r\n  //       </div>\r\n  //     );\r\n  //   }\r\n  // };\r\n\r\n  const renderProfile = () => {\r\n    // const getUserProfile = (currentUser) => {\r\n    //   switch (Boolean(currentUser)) {\r\n    //     case true:\r\n    //       return (\r\n    //         <div className=\"flex h-auto\">\r\n    //           <div className=\" inline-block h-auto min-h-screen w-1/4 bg-gray-600\">\r\n    //             <div\r\n    //               onClick={() => {\r\n    //                 setActiveTab(1);\r\n    //               }}\r\n    //               className={`${\r\n    //                 activeTab === 1 ? \"bg-gray-200\" : \"\"\r\n    //               } hover:bg-gray-400 p-4 m4 cursor-pointer`}>\r\n    //               Overview\r\n    //             </div>\r\n    //             <div\r\n    //               onClick={() => {\r\n    //                 setActiveTab(2);\r\n    //               }}\r\n    //               className={`${\r\n    //                 activeTab === 2 ? \"bg-gray-200\" : \"\"\r\n    //               } hover:bg-gray-400 p-4 m4 cursor-pointer`}>\r\n    //               My experiences\r\n    //             </div>\r\n    //             <div\r\n    //               onClick={() => {\r\n    //                 setActiveTab(3);\r\n    //               }}\r\n    //               className={`${\r\n    //                 activeTab === 3 ? \"bg-gray-200\" : \"\"\r\n    //               } hover:bg-gray-400 p-4 m4 cursor-pointer`}>\r\n    //               My partners experiences\r\n    //             </div>\r\n    //             <div\r\n    //               onClick={() => {\r\n    //                 setActiveTab(4);\r\n    //               }}\r\n    //               className={`${\r\n    //                 activeTab === 4 ? \"bg-gray-200\" : \"\"\r\n    //               } hover:bg-gray-400 p-4 m4 cursor-pointer`}>\r\n    //               My Account\r\n    //             </div>\r\n    //           </div>\r\n    //           <div className=\"flex-1 h-auto min-h-screen w-3/4 p-4 bg-gray-200\">\r\n    //             {renderTab(activeTab)}\r\n    //           </div>\r\n    //         </div>\r\n    //       );\r\n    //     case false:\r\n    //       if (currentUser === null) {\r\n    //         return (\r\n    //           <div className=\"bg-gray-500 inilne-block h-screen  flex justify-center items-center text-white cursor-wait\">\r\n    //             <h1 className=\"font-bold\">\r\n    //               Loading... Please wait...\r\n    //             </h1>\r\n    //           </div>\r\n    //         );\r\n    //       } else\r\n    //         return (\r\n    //           <div>\r\n    //             <div className=\"flex justify-around ml-6\">\r\n    //               <div>\r\n    //                 <h3>Please Complete your Profile infos</h3>\r\n    //               </div>\r\n    //               <AccountForm onSubmit={onSubmit} />\r\n    //             </div>\r\n    //           </div>\r\n    //         );\r\n    //     default:\r\n    //       return (\r\n    //         <div className=\"bg-gray-500 inilne-block h-screen flex justify-center items-center text-white cursor-wait\">\r\n    //           <h1 className=\"font-bold\">Loading... Please wait...</h1>\r\n    //         </div>\r\n    //       );\r\n    //   }\r\n    // };\r\n\r\n    switch (isSignedIn) {\r\n      case true:\r\n        // return <>{getUserProfile(currentUser)} </>;\r\n        return <ProductList />;\r\n      case false:\r\n        return (\r\n          <div className=\"flex items-center p-16\">\r\n            <h2>Please Login or register a new account to access this page</h2>\r\n            <Link\r\n              className=\"bg-indigo-400 px-4 py-1 text-white ml-4 rounded shadow\"\r\n              to=\"/\">\r\n              Get Started\r\n            </Link>\r\n          </div>\r\n        );\r\n\r\n      default:\r\n        if (loader) {\r\n          return (\r\n            <div className=\"bg-gray-500 inilne-block h-screen flex justify-center items-center text-white cursor-wait\">\r\n              <h1 className=\"font-bold\">Loading... Please wait...</h1>\r\n            </div>\r\n          );\r\n        }\r\n    }\r\n  };\r\n  return <div>{renderProfile()}</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return <div>404 Not Found</div>;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"@reach/router\";\r\nimport SignOutBtn from \"./SignOutBtn\";\r\nimport { getAuthState } from \"../../actions\";\r\n\r\nexport default function BtnLogin(props) {\r\n  const authState = useSelector((state) => {\r\n    return state.auth;\r\n  });\r\n  const isSignedIn = authState.isSignedIn;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getAuthState());\r\n  }, [dispatch]);\r\n\r\n  const renderBtn = () => {\r\n    if (isSignedIn) {\r\n      return <SignOutBtn className={props.className} />;\r\n    } else if (isSignedIn === false) {\r\n      return (\r\n        // <Link className={props.className} to=\"start\">\r\n        //   <i className=\"mr-1 ion-ios-exit\" />\r\n        //   Login for Businesses\r\n        // </Link>\r\n        <Link className={props.className} to=\"/\">\r\n          <i className=\"mr-1 ion-ios-exit\" />\r\n          Login\r\n        </Link>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{renderBtn()}</div>;\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"@reach/router\";\r\nimport BtnLogin from \"../components/Authentication/BtnLogin\";\r\n\r\nexport default function Header({ navlinks, background, logo }) {\r\n  const [navOpen, setNavOpen] = useState(false);\r\n\r\n  return (\r\n    <nav\r\n      onMouseLeave={() => {\r\n        setNavOpen(false);\r\n      }}\r\n      className={`sm:flex sm:justify-between bg-${background}-400 sm:items-center sm:px-4 sm:py-3`}>\r\n      <div className=\"flex items-center justify-between px-4 py-3 sm:p-0\">\r\n        <div className=\"flex items-center\">\r\n          {/* <svg\r\n            className=\"fill-current h-12 w-12\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 841.9 595.3\">\r\n            <g fill=\"#61DAFB\">\r\n              <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" />\r\n              <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\" />\r\n              <path d=\"M520.5 78.1z\" />\r\n            </g>\r\n          </svg> */}\r\n          <i className={`mr-1 text-white text-3xl ion-ios-home`} />\r\n          <Link\r\n            to=\"/\"\r\n            className=\"pl-10 -ml-10 z-10 font-semibold text-xl text-white tracking-tight\">\r\n            Home\r\n          </Link>\r\n        </div>\r\n        <div className=\"block sm:hidden\">\r\n          <button\r\n            onClick={() => {\r\n              setNavOpen(!navOpen);\r\n            }}\r\n            className={`flex items-center px-1 py-1  rounded text-${background}-200  hover:text-white `}>\r\n            <svg\r\n              className=\"h-6 w-6 fill-current\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 24 24\">\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                clipRule=\"evenodd\"\r\n                d={\r\n                  navOpen\r\n                    ? \"M18.278 16.864a1 1 0 0 1-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 0 1-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 0 1 1.414-1.414l4.829 4.828 4.828-4.828a1 1 0 1 1 1.414 1.414l-4.828 4.829 4.828 4.828z\"\r\n                    : \"M4 5h16a1 1 0 0 1 0 2H4a1 1 0 1 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2zm0 6h16a1 1 0 0 1 0 2H4a1 1 0 0 1 0-2z\"\r\n                }\r\n              />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`${\r\n          navOpen ? \"block\" : \"hidden\"\r\n        } px-2 pt-2 pb-4 sm:flex sm:p-0`}>\r\n        {navlinks.map((item) => {\r\n          return (\r\n            <Link\r\n              key={item.text}\r\n              className={`block mt-4 lg:inline-block lg:mt-0 font-semibold hover:bg-${background}-300 text-${background}-100 hover:text-white mr-4`}\r\n              to={item.path}>\r\n              <i className={`mr-1 ${item.icon}`} />\r\n              {item.text}\r\n            </Link>\r\n          );\r\n        })}\r\n      </div>\r\n      <BtnLogin\r\n        className={`${\r\n          navOpen ? \"inline-block\" : \"hidden\"\r\n        } mt-4 sm:flex lg:inline-block p-2 mb-2 sm:mb-0 lg:mt-0 font-semibold border border-white hover:bg-${background}-300 text-${background}-100 hover:text-white mr-4`}\r\n      />\r\n    </nav>\r\n  );\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { Router, Match } from \"@reach/router\";\r\nimport Home from \"../src/pages/Home\";\r\nimport Experiences from \"../src/pages/Experiences\";\r\nimport Register from \"../src/pages/Register\";\r\nimport Businesses from \"../src/pages/Businesses\";\r\nimport BusinessOwner from \"../src/pages/BusinessOwner\";\r\nimport Profile from \"../src/pages/Profile\";\r\nimport NotFound from \"../src/pages/NotFound\";\r\nimport ThankYou from \"../src/pages/ThankYou\";\r\nimport Header from \"./components/Header\";\r\nimport CreateExperience from \"./pages/CreateExperience\";\r\nimport DeleteExperience from \"./components/experiences/DeleteExperience\";\r\nimport EditExperience from \"./components/experiences/EditExperience\";\r\nimport ShowExperience from \"./pages/ShowExperience\";\r\nimport logo from \"./images/logo.svg\";\r\nimport Cart from \"./pages/Cart\";\r\nimport Footer from \"./components/Footer\";\r\nimport AddProduct from \"./AddProduct\";\r\nimport ProductList from \"./ProductList\";\r\n\r\nfunction App() {\r\n  let path;\r\n  useEffect(() => {\r\n    path = window.location.pathname;\r\n  }, [path]);\r\n  let background = \"indigo\";\r\n  let hoverBackground = \"indigo-700\";\r\n  // let navlinks = [\r\n  //   {\r\n  //     text: \"Home\",\r\n  //     path: \"/\",\r\n  //     icon: \"ion-ios-home\",\r\n  //   },\r\n  //   {\r\n  //     text: \"Profile\",\r\n  //     path: \"/profile\",\r\n  //     icon: \"ion-ios-person\",\r\n  //   },\r\n  // ];\r\n  let navlinks = [];\r\n\r\n  return (\r\n    <div>\r\n      <Header\r\n        navlinks={navlinks}\r\n        logo={logo}\r\n        background={background}\r\n        hoverBackground={hoverBackground}\r\n      />\r\n      <Router className=\"min-h-1/2s\">\r\n        {/* <Home path=\"/\" /> */}\r\n        <AddProduct path=\"/ajouter\" />\r\n        <Profile path=\"/products\" />\r\n        {/* <ProductList path=\"/products\" /> */}\r\n        {/* <Experiences path=\"/experiences\" /> */}\r\n        <Register path=\"/\" />\r\n        {/* <Businesses path=\"/businesses\" />\r\n        <BusinessOwner path=\"/businessOwner/:id\" />\r\n       \r\n        <CreateExperience path=\"/profile/new\" />\r\n        <DeleteExperience path=\"/profile/delete\" />\r\n        <EditExperience path=\"profile/edit\" />\r\n        <ShowExperience path=\"businesses/show/:id\" />\r\n        <Cart path=\"/cart\" />\r\n        <ThankYou path=\"/thankyou\" /> */}\r\n        <NotFound default />\r\n      </Router>\r\n      {/* <Match path=\"/profile\">\r\n        {(props) => (props.match ? null : <Footer />)}\r\n      </Match> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { SIGN_IN, SIGN_OUT } from \"../actions/types\";\r\nconst INITIAL_STATE = {\r\n  isSignedIn: null,\r\n  user: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case SIGN_IN:\r\n      return { ...state, isSignedIn: true, user: action.payload };\r\n    case SIGN_OUT:\r\n      return { ...state, isSignedIn: false, user: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  FETCH_SELECTED_BUSINESS,\r\n  FETCH_BUSINESSES,\r\n  SEARCH_BUSINESS_OWNER,\r\n  CATEGORY_SELECTED,\r\n  COMPLETE_USER_DATA,\r\n  FETCH_CURRENT_USER,\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  selectedBusiness: null,\r\n  businessesList: null,\r\n  searchedBusiness: null,\r\n  currentUser: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_SELECTED_BUSINESS:\r\n      return { ...state, selectedBusiness: action.payload };\r\n    case FETCH_CURRENT_USER:\r\n      return { ...state, currentUser: action.payload };\r\n    case COMPLETE_USER_DATA:\r\n      return { ...state, selectedBusiness: action.payload };\r\n    case FETCH_BUSINESSES:\r\n      return { ...state, businessesList: action.payload };\r\n    case SEARCH_BUSINESS_OWNER:\r\n      return { ...state, searchedBusiness: action.payload };\r\n    case CATEGORY_SELECTED:\r\n      return { ...state, selectedCategory: action.payload };\r\n    // case CREATE_BUSINESS:\r\n    //   return { ...state, [action.payload.id]: action.payload };\r\n    // case FETCH_BUSINESSES:\r\n    //   return { ...state, ..._.mapKeys(action.payload, \"id\") };\r\n    // case EDIT_BUSINESS:\r\n    //   return { ...state, [action.payload.id]: action.payload };\r\n    // case DELETE_BUSINESS:\r\n    //   return _.omit(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CATEGORY_SELECTED,\r\n  FETCH_SELECTED_BIZ_EXPERIENCES,\r\n  FETCH_USER_EXPERIENCES,\r\n  FETCH_PUBLISHED_EXPERIENCES,\r\n  FETCH_PARTNERS_EXPERIENCES,\r\n  FETCH_EXPERIENCE,\r\n  CREATE_EXPERIENCE,\r\n  FETCH_BUSINESS_PARTNERS_EXPERIENCES,\r\n} from \"../actions/types\";\r\nconst INITIAL_STATE = {\r\n  selectedExperience: null,\r\n  selectedCategory: null,\r\n  userExperiences: null,\r\n  publishedExperiences: null,\r\n  partnersExperiences: null,\r\n  selectedBizExpriences: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_EXPERIENCE:\r\n      return { ...state, selectedExperience: action.payload };\r\n    case FETCH_SELECTED_BIZ_EXPERIENCES:\r\n      return { ...state, selectedBizExpriences: action.payload };\r\n    case CATEGORY_SELECTED:\r\n      return { ...state, selectedCategory: action.payload };\r\n    case FETCH_USER_EXPERIENCES:\r\n      return { ...state, userExperiences: action.payload };\r\n    case CREATE_EXPERIENCE:\r\n      return { ...state };\r\n    case FETCH_PUBLISHED_EXPERIENCES:\r\n      return { ...state, publishedExperiences: action.payload };\r\n    case FETCH_PARTNERS_EXPERIENCES:\r\n      return { ...state, partnersExperiences: action.payload };\r\n    case FETCH_BUSINESS_PARTNERS_EXPERIENCES:\r\n      return { ...state, businessPartExperiences: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  UPLOAD_PROGRESS,\r\n  GET_DOWNLOAD_URL,\r\n  UPLOAD_ERROR,\r\n} from \"../actions/types\";\r\nconst INITIAL_STATE = {\r\n  uploadProgress: 0,\r\n  error: null,\r\n  downloadURL: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPLOAD_PROGRESS:\r\n      return { ...state, uploadProgress: action.payload };\r\n    case UPLOAD_ERROR:\r\n      return { ...state, error: action.payload };\r\n    case GET_DOWNLOAD_URL:\r\n      return { ...state, downloadURL: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  UPLOAD_ERROR,\r\n  CREATE_ERROR,\r\n  FETCH_ERROR,\r\n  SIGN_IN_ERROR,\r\n  SIGN_UP_ERROR,\r\n  GOOGLE_SIGNIN_ERROR,\r\n} from \"../actions/types\";\r\nconst INITIAL_STATE = {\r\n  uploadError: null,\r\n  createError: null,\r\n  fetchError: null,\r\n  signInError: null,\r\n  googleSignInErr: null,\r\n  signUpError: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case UPLOAD_ERROR:\r\n      return { ...state, uploadError: action.payload };\r\n    case CREATE_ERROR:\r\n      return { ...state, createError: action.payload };\r\n    case FETCH_ERROR:\r\n      return { ...state, fetchError: action.payload };\r\n    case SIGN_IN_ERROR:\r\n      return { ...state, signInError: action.payload };\r\n    case SIGN_UP_ERROR:\r\n      return { ...state, signUpError: action.payload };\r\n    case GOOGLE_SIGNIN_ERROR:\r\n      return { ...state, googleSignInErr: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  TRANSACTION_SUCCESS,\r\n  TRANSACTION_FAILED,\r\n} from \"../actions/types\";\r\n\r\nconst INITIAL_STATE = {\r\n  paid: false,\r\n  transaction_details: null,\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case TRANSACTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        paid: true,\r\n        transaction_details: action.payload,\r\n      };\r\n    case TRANSACTION_FAILED:\r\n      return { ...state, paid: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { ADD_PRODUCT, EDIT_PRODUCT, FETCH_PRODUCTS } from \"../actions/types\";\r\nconst INITIAL_STATE = {\r\n  availableProducts: [],\r\n};\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case ADD_PRODUCT:\r\n      return { ...state };\r\n    case EDIT_PRODUCT:\r\n      return { ...state };\r\n    case FETCH_PRODUCTS:\r\n      return { ...state, availableProducts: action.payload };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport businessReducer from \"./businessReducer\";\r\nimport experienceReducer from \"./experienceReducer\";\r\nimport uploadReducer from \"./uploadReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport loaderReducer from \"./loaderReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport products from \"./products\";\r\n\r\n// import { reducer as formReducer } from \"redux-form\";\r\nexport default combineReducers({\r\n  auth: authReducer,\r\n  businesses: businessReducer,\r\n  experiences: experienceReducer,\r\n  uploads: uploadReducer,\r\n  errors: errorReducer,\r\n  loader: loaderReducer,\r\n  cart: cartReducer,\r\n  products,\r\n});\r\n","import { SET_LOADER } from \"../actions/types\";\r\n\r\nexport default (state = false, action) => {\r\n  switch (action.type) {\r\n    case SET_LOADER:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport reducers from \"./reducers\";\n\nimport \"./styles/main.css\";\nconst composeEnhancers =\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}